# Part 1 - Review
#   1. SQL Injection = Extract Data
#     - Union = Disply SQL Result
#     - Error Based = Disply SQL Error
#     - Blind = SQL Working
#   2. Find SQL Injection Point
#     - The SQL Place to request DB
#     - When where user_id like, test = nor%' and '1%'='1

------------------------------------------------------------------------------------------------

# Part 2. - Find SQL Injection Point (https://velvetviolet1024.tistory.com/81)
#   1. HTTP request header (cookie)
#     - It works SQL select function in cookie information to bring DB data
#   2. Column name SQL Injection (https://www.sqlinjection.net/column-names/)
#     - select () from () where (option_val) like '%(board_result)%'
#   3. Sort (order by SQL Injection)
#     - where username like '&sfUser&' order by (case)
#     - case when (condition) then (true) else (false) end
#     - case when (1=1) then username else title end
#     - case when (1=1) then 1 else (select 1 union select 2) end
#     - select 1 union select 2 where 1=1
#   4. causing error
#     - sfUser' and (select 1 union select 2 where (1=2) and '1'='1

------------------------------------------------------------------------------------------------

# Part 3. - SQL Injection countermeasure
#    1. Prepared Statement
#      - Prepared compiling
#    2. Vulnerabilities
#      - wrong situation
#      - Not working of prepared statement (order by, table name, column name)
#    3. White List Filtering
#      - White list = be able to use some words
#      - Black list = cannot use some words

------------------------------------------------------------------------------------------------

#  Assignment
#    1. Review
#    2. SQL Injection attack types (https://www.acunetix.com/websitesecurity/sql-injection2/)
#    3. CTF
#    4. Web Development (Board - search function with secure code)
