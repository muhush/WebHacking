# Review
# SQL Injection?
#   - Excute SQL Injection to extract data in Database
#   - Select [column_name] from table
#   - Create Attack format
#   - in the field, usually use blindSQLi and it is the final step
#   - Automatic tool by using python
#   - Provention = prepared statement, excepting order by, column, so use the white list

# XSS
#  - Client site attack

------------------------------------------------------------------------------------------------------------------------------------

# Part 1. SQL Injection Point Review
#    - Web site = by using SQL statement
#               = Try to attack after guessing SQL statement to the server side
#    - Union SQL Injection, Error Based SQL Injection, Blind SQLi
#    - SQl Injection countermeasure = prepared statement, but excepting order by, so filtering white list
#    - Cautions! 
#      1. Do Not Use, insert, delete, and update
#      2. Do Not Use or // #
#      3. Do not change Database information

#    - order by = sotingAd=,(case+when+ascii(substr((select+user+from+dual),1,1))=0+then+1+else+(1/0)+end)
#    - time based blind SQLi = sotingAd=ASC;if+substring((select%20user_name()),1,1)=%27a%27+waitfor+delay+%270:0:1%27&startDt=&endDt=&keyword=

------------------------------------------------------------------------------------------------------------------------------------

# Part 2. XSS vulnerability: Cross-Site Scripting
#  - Insert script in client site
#  - Victim = User
#  - Client script = Showing in User browser
#  - HTML, CSS, Javascript
#  - Attack method = Execute the attacking script in the user's browser

------------------------------------------------------------------------------------------------------------------------------------

# Part 3. How to use XSS
#   1. Save in server
#      - Create account
#      - Write on board
#      * Save data and print the data
#      - WE save some data and display the data on the screen by using burp suite
#      1) Check the data to display on the screen
#      2) Check special letters = <'">
#      3) POC (Proof of Concept = alert(1), prompt, confirm, console.log()    Why? it is easy to report
#      name=normaltic<script>alert('xss attack')</script>
#   2. Use server echo = parameter
